{
  "openapi": "3.0.1",
  "info": {
    "title": "Library Management API",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/register-admin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Books": {
      "get": {
        "tags": [
          "Books"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Borrowers": {
      "get": {
        "tags": [
          "Borrowers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BorrowerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BorrowerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BorrowerDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Borrowers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBorrowerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBorrowerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBorrowerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Borrowers/{id}": {
      "get": {
        "tags": [
          "Borrowers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BorrowerDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Borrowers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBorrowerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBorrowerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBorrowerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Borrowers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Loans": {
      "get": {
        "tags": [
          "Loans"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Loans/{id}": {
      "get": {
        "tags": [
          "Loans"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Loans/borrow": {
      "post": {
        "tags": [
          "Loans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoanDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoanDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoanDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Loans/return": {
      "post": {
        "tags": [
          "Loans"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnLoanDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnLoanDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnLoanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Loans/overdue": {
      "get": {
        "tags": [
          "Loans"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoanDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BookDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "availableQuantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BorrowerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBookDto": {
        "required": [
          "author",
          "isbn",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "author": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "isbn": {
            "maxLength": 13,
            "minLength": 10,
            "type": "string"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateBorrowerDto": {
        "required": [
          "contactInfo",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "contactInfo": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "CreateLoanDto": {
        "required": [
          "bookId",
          "borrowDate",
          "borrowerId",
          "dueDate"
        ],
        "type": "object",
        "properties": {
          "bookId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "borrowerId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LoanDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bookId": {
            "type": "integer",
            "format": "int32"
          },
          "bookTitle": {
            "type": "string",
            "nullable": true
          },
          "borrowerId": {
            "type": "integer",
            "format": "int32"
          },
          "borrowerName": {
            "type": "string",
            "nullable": true
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOverdue": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReturnLoanDto": {
        "required": [
          "loanId",
          "returnDate"
        ],
        "type": "object",
        "properties": {
          "loanId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateBookDto": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "author": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "maxLength": 13,
            "minLength": 10,
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBorrowerDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "contactInfo": {
            "maxLength": 150,
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLoginDto": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserRegistrationDto": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string"
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}